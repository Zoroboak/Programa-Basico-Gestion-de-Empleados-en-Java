/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WinEmpleados;

import Empleados.Empleado;
import Empleados.EmpleadoComision;
import Empleados.EmpleadoHoras;
import Empleados.EmpleadoMontador;
import Empleados.JefeProyecto;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * Proyecto Gestion de Empleados con Interfaz Grafica en java
 *
 * @author Pedro Pérez 14/10/2019
 *
 * Pseudocidgo del proyecto:
 *
 * Al Modificar un campo Al estar rellenado 1 campo Habilitar boton borrarDatos
 * si es jefe o trabajador a comision Comprobar si están rellenados los 5 campos
 * habilitar boton añadir Si son montador o por horas habilitar boton añadir
 * comprobar si están rellenados los 4 campos
 *
 * Al presionar Añadir Preguntar Tipo trabajador tomarDatos según el tipo crear
 * nuevo empleado añadirlo a la lista +clrearFields desactivar ambos botones
 *
 * al presionar boton borrarDatos +clrearFields
 *
 * al seleccionar un trabajador habiliar boton eliminar trabajador mostrar su
 * salario
 *
 * Al perder el focus de un trabajador desabilitar boton eliminarTrabajdor
 * limpiarCampoSalario
 *
 * al presionar boton eliminar trabajador eliminar el trabajador selecionado de
 * la lista
 *
 *
 */
public class ProGestionEmpleados extends javax.swing.JFrame {

    DefaultListModel modelo;
    Empleado aux; //empleado temporal
    boolean campoCorrecto[] = {false, false, false, false, false};

    /**
     * Creates new form ProGestionEmpleados
     */
    public ProGestionEmpleados() {
        initComponents();
        initMyComponents();

    }

    /**
     * Metodo que añade los radioButton a un mismo button group
     */
    private void initMyComponents() {
        //Añadir Radio Buttons a grupo de botones
        buttonGroupTipoTrabajador.add(jRadioButtonJefeProyecto);
        buttonGroupTipoTrabajador.add(jRadioButtonTrabajadorHoras);
        buttonGroupTipoTrabajador.add(jRadioButtonTrabajadorMontador);
        buttonGroupTipoTrabajador.add(jRadioButtonTrabajadorComision);

        //Centrar Ventana
        this.setLocationRelativeTo(null);

        //Instanciar nuevo modelo para el JList
        modelo = new DefaultListModel();
        jListListaEmpleados.setModel(modelo);

        //Limpiar los campos por defecto
        clearFields();
    }

    /**
     * Metodo generado con el frontend de la aplicación
     *
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipoTrabajador = new javax.swing.ButtonGroup();
        jPanelDatosTrabajador = new javax.swing.JPanel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellido = new javax.swing.JLabel();
        jLabelActualizable1 = new javax.swing.JLabel();
        jLabelActualizable2 = new javax.swing.JLabel();
        jLabelActualizable3 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldApellido = new javax.swing.JTextField();
        jTextFieldActualizable1 = new javax.swing.JTextField();
        jTextFieldActualizable2 = new javax.swing.JTextField();
        jTextFieldActualizable3 = new javax.swing.JTextField();
        jPanelTipodeTrabajador = new javax.swing.JPanel();
        jPanelTipoTrabajador = new javax.swing.JPanel();
        jRadioButtonJefeProyecto = new javax.swing.JRadioButton();
        jRadioButtonTrabajadorHoras = new javax.swing.JRadioButton();
        jRadioButtonTrabajadorMontador = new javax.swing.JRadioButton();
        jRadioButtonTrabajadorComision = new javax.swing.JRadioButton();
        jButtonAñadir = new javax.swing.JButton();
        jButtonBorrarDatos = new javax.swing.JButton();
        jPanelTrabajadoresActivos = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jListListaEmpleados = new javax.swing.JList<>();
        jLabelMensaje = new javax.swing.JLabel();
        jLabelSalario = new javax.swing.JLabel();
        jTextFieldSalario = new javax.swing.JTextField();
        jButtonEliminarTrabajador = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemJefeProyecto = new javax.swing.JMenuItem();
        jMenuItemTrabajadorHoras = new javax.swing.JMenuItem();
        jMenuItemTrabajadorMontador = new javax.swing.JMenuItem();
        jMenuItemTrabajadorComisión = new javax.swing.JMenuItem();
        jSeparator = new javax.swing.JPopupMenu.Separator();
        jMenuItemBorrarTodos = new javax.swing.JMenuItem();
        jMenuItemBorrarSeleccionados = new javax.swing.JMenuItem();
        jMenuItemBorrarSelección = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelDatosTrabajador.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Trabajador"));

        jLabelNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelNombre.setText("Nombre:");

        jLabelApellido.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelApellido.setText("Apellido:");

        jLabelActualizable1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelActualizable1.setText("Salario Base:");

        jLabelActualizable2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelActualizable2.setText("Incentivo Proyecto:");

        jLabelActualizable3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelActualizable3.setText("Nº Proyectos");

        jTextFieldNombre.setText(" ");
        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyReleased(evt);
            }
        });

        jTextFieldApellido.setText(" ");
        jTextFieldApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldApellidoKeyReleased(evt);
            }
        });

        jTextFieldActualizable1.setText(" ");
        jTextFieldActualizable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldActualizable1KeyReleased(evt);
            }
        });

        jTextFieldActualizable2.setText(" ");
        jTextFieldActualizable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldActualizable2KeyReleased(evt);
            }
        });

        jTextFieldActualizable3.setText(" ");
        jTextFieldActualizable3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldActualizable3KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosTrabajadorLayout = new javax.swing.GroupLayout(jPanelDatosTrabajador);
        jPanelDatosTrabajador.setLayout(jPanelDatosTrabajadorLayout);
        jPanelDatosTrabajadorLayout.setHorizontalGroup(
            jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosTrabajadorLayout.createSequentialGroup()
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosTrabajadorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelActualizable1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanelDatosTrabajadorLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelActualizable2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabelActualizable3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldActualizable1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldActualizable2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldActualizable3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanelDatosTrabajadorLayout.setVerticalGroup(
            jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosTrabajadorLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombre)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellido)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelActualizable1)
                    .addComponent(jTextFieldActualizable1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelActualizable2)
                    .addComponent(jTextFieldActualizable2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelActualizable3)
                    .addComponent(jTextFieldActualizable3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelTipodeTrabajador.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Trabajadores"));

        jPanelTipoTrabajador.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo Trabajador"));

        jRadioButtonJefeProyecto.setSelected(true);
        jRadioButtonJefeProyecto.setText("Jefe de Proyecto");
        jRadioButtonJefeProyecto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonJefeProyectoItemStateChanged(evt);
            }
        });

        jRadioButtonTrabajadorHoras.setText("Trabajador por Horas");
        jRadioButtonTrabajadorHoras.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTrabajadorHorasItemStateChanged(evt);
            }
        });

        jRadioButtonTrabajadorMontador.setText("Trabajador Montador");
        jRadioButtonTrabajadorMontador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTrabajadorMontadorItemStateChanged(evt);
            }
        });

        jRadioButtonTrabajadorComision.setText("Trabajador a Comisión");
        jRadioButtonTrabajadorComision.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTrabajadorComisionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelTipoTrabajadorLayout = new javax.swing.GroupLayout(jPanelTipoTrabajador);
        jPanelTipoTrabajador.setLayout(jPanelTipoTrabajadorLayout);
        jPanelTipoTrabajadorLayout.setHorizontalGroup(
            jPanelTipoTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTipoTrabajadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelTipoTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonJefeProyecto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonTrabajadorHoras, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonTrabajadorMontador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonTrabajadorComision, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanelTipoTrabajadorLayout.setVerticalGroup(
            jPanelTipoTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTipoTrabajadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonJefeProyecto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTrabajadorHoras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTrabajadorMontador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTrabajadorComision)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jButtonAñadir.setText("Añadir");
        jButtonAñadir.setEnabled(false);
        jButtonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirActionPerformed(evt);
            }
        });

        jButtonBorrarDatos.setText("Borrar Datos");
        jButtonBorrarDatos.setEnabled(false);
        jButtonBorrarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTipodeTrabajadorLayout = new javax.swing.GroupLayout(jPanelTipodeTrabajador);
        jPanelTipodeTrabajador.setLayout(jPanelTipodeTrabajadorLayout);
        jPanelTipodeTrabajadorLayout.setHorizontalGroup(
            jPanelTipodeTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTipodeTrabajadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTipodeTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTipodeTrabajadorLayout.createSequentialGroup()
                        .addComponent(jButtonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBorrarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelTipoTrabajador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelTipodeTrabajadorLayout.setVerticalGroup(
            jPanelTipodeTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTipodeTrabajadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTipoTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTipodeTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAñadir)
                    .addComponent(jButtonBorrarDatos))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanelTrabajadoresActivos.setBorder(javax.swing.BorderFactory.createTitledBorder("Trabajadores en Activos"));

        jListListaEmpleados.setToolTipText("");
        jListListaEmpleados.setFocusable(false);
        jListListaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListListaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(jListListaEmpleados);

        jLabelMensaje.setText("Seleccione un trabajador para ver su salario");
        jLabelMensaje.setAutoscrolls(true);

        jLabelSalario.setText("Salarario: ");

        jTextFieldSalario.setEnabled(false);

        jButtonEliminarTrabajador.setText("Eliminar Trabajador");
        jButtonEliminarTrabajador.setEnabled(false);
        jButtonEliminarTrabajador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarTrabajadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTrabajadoresActivosLayout = new javax.swing.GroupLayout(jPanelTrabajadoresActivos);
        jPanelTrabajadoresActivos.setLayout(jPanelTrabajadoresActivosLayout);
        jPanelTrabajadoresActivosLayout.setHorizontalGroup(
            jPanelTrabajadoresActivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTrabajadoresActivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelTrabajadoresActivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelMensaje)
                    .addComponent(jLabelSalario)
                    .addComponent(jTextFieldSalario, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonEliminarTrabajador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTrabajadoresActivosLayout.setVerticalGroup(
            jPanelTrabajadoresActivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTrabajadoresActivosLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelMensaje)
                .addGap(18, 18, 18)
                .addComponent(jLabelSalario)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonEliminarTrabajador)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelTrabajadoresActivosLayout.createSequentialGroup()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenuArchivo.setText("Archivo");

        jMenuItemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSalir.setMnemonic('S');
        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemSalir);

        jMenuBar1.add(jMenuArchivo);

        jMenu2.setText("Trabajador");

        jMenu3.setMnemonic('N');
        jMenu3.setText("Nuevo");

        jMenuItemJefeProyecto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemJefeProyecto.setMnemonic('P');
        jMenuItemJefeProyecto.setText("Jefe de proyecto");
        jMenuItemJefeProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemJefeProyectoActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemJefeProyecto);

        jMenuItemTrabajadorHoras.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemTrabajadorHoras.setMnemonic('H');
        jMenuItemTrabajadorHoras.setText("Trabajador por horas");
        jMenuItemTrabajadorHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTrabajadorHorasActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemTrabajadorHoras);

        jMenuItemTrabajadorMontador.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemTrabajadorMontador.setMnemonic('M');
        jMenuItemTrabajadorMontador.setText("Trabajador montador");
        jMenuItemTrabajadorMontador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTrabajadorMontadorActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemTrabajadorMontador);

        jMenuItemTrabajadorComisión.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemTrabajadorComisión.setMnemonic('C');
        jMenuItemTrabajadorComisión.setText("Trabajdor a comisión");
        jMenuItemTrabajadorComisión.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTrabajadorComisiónActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemTrabajadorComisión);

        jMenu2.add(jMenu3);
        jMenu2.add(jSeparator);

        jMenuItemBorrarTodos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemBorrarTodos.setMnemonic('T');
        jMenuItemBorrarTodos.setText("Borrar todos");
        jMenuItemBorrarTodos.setEnabled(false);
        jMenuItemBorrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBorrarTodosActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemBorrarTodos);

        jMenuItemBorrarSeleccionados.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemBorrarSeleccionados.setMnemonic('S');
        jMenuItemBorrarSeleccionados.setText("Borrar seleccionados");
        jMenuItemBorrarSeleccionados.setEnabled(false);
        jMenuItemBorrarSeleccionados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBorrarSeleccionadosActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemBorrarSeleccionados);

        jMenuItemBorrarSelección.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemBorrarSelección.setMnemonic('B');
        jMenuItemBorrarSelección.setText("Borrar selección");
        jMenuItemBorrarSelección.setEnabled(false);
        jMenuItemBorrarSelección.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBorrarSelecciónActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemBorrarSelección);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDatosTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTipodeTrabajador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanelTrabajadoresActivos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelDatosTrabajador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTipodeTrabajador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTrabajadoresActivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo activado por el ActionPerformed de el boton añadir
     *
     * @param evt
     */
    private void jButtonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirActionPerformed
        // TODO add your handling code here:

        try {
            if (jRadioButtonJefeProyecto.isSelected()) {
                aux = new JefeProyecto(
                        jTextFieldNombre.getText().toString(),
                        jTextFieldApellido.getText().toString(),
                        Double.valueOf(jTextFieldActualizable1.getText().toString()),
                        Double.valueOf(jTextFieldActualizable2.getText().toString()),
                        Integer.valueOf(jTextFieldActualizable3.getText().toString())
                );
            } else if (jRadioButtonTrabajadorComision.isSelected()) {
                aux = new EmpleadoComision(
                        jTextFieldNombre.getText().toString(),
                        jTextFieldApellido.getText().toString(),
                        Double.valueOf(jTextFieldActualizable1.getText().toString()),
                        Integer.valueOf(jTextFieldActualizable3.getText().toString()),
                        Double.valueOf(jTextFieldActualizable2.getText().toString())
                );
            } else if (jRadioButtonTrabajadorMontador.isSelected()) {
                aux = new EmpleadoMontador(
                        jTextFieldNombre.getText().toString(),
                        jTextFieldApellido.getText().toString(),
                        Integer.valueOf(jTextFieldActualizable1.getText().toString()),
                        Double.valueOf(jTextFieldActualizable2.getText().toString())
                );
            } else if (jRadioButtonTrabajadorHoras.isSelected()) {
                aux = new EmpleadoHoras(
                        jTextFieldNombre.getText().toString(),
                        jTextFieldApellido.getText().toString(),
                        Integer.valueOf(jTextFieldActualizable1.getText().toString()),
                        Double.valueOf(jTextFieldActualizable2.getText().toString())
                );

            }

            modelo.addElement(aux); //Añado elemento al modelo
            aux = null;//hago reset al valor de aux
            clearFields();//Limpio todos los campos

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los campos introducidos no son correctos");
            clearFields();
        }
    }//GEN-LAST:event_jButtonAñadirActionPerformed

    /**
     * Metodo activado por el actionPerforme del boton BorrarDatos
     *
     * @param evt
     */
    private void jButtonBorrarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarDatosActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_jButtonBorrarDatosActionPerformed

    /**
     * Conjunto de metodos que definiran el comportamiento de los RadioButton en
     * la interfaz
     *
     * @param evt
     */
    private void jRadioButtonJefeProyectoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonJefeProyectoItemStateChanged
        // TODO add your handling code here:
        jTextFieldActualizable3.setVisible(true);
        jLabelActualizable1.setText("Salario Base:");
        jLabelActualizable2.setText("Incentivo Proyecto:");
        jLabelActualizable3.setText("Nº Proyectos");
        clearFields();
    }//GEN-LAST:event_jRadioButtonJefeProyectoItemStateChanged

    private void jRadioButtonTrabajadorHorasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTrabajadorHorasItemStateChanged
        // TODO add your handling code here:
        jTextFieldActualizable3.setVisible(false);
        jLabelActualizable1.setText("Numero Horas:");
        jLabelActualizable2.setText("Salario Hora:");
        jLabelActualizable3.setText(" ");
        clearFields();
    }//GEN-LAST:event_jRadioButtonTrabajadorHorasItemStateChanged

    private void jRadioButtonTrabajadorMontadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTrabajadorMontadorItemStateChanged
        // TODO add your handling code here:
        jTextFieldActualizable3.setVisible(false);
        jLabelActualizable1.setText("Numero Piezas:");
        jLabelActualizable2.setText("Salario Pieza:");
        jLabelActualizable3.setText(" ");
        clearFields();
    }//GEN-LAST:event_jRadioButtonTrabajadorMontadorItemStateChanged

    private void jRadioButtonTrabajadorComisionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTrabajadorComisionItemStateChanged
        // TODO add your handling code here:
        // TODO add your handling code here:
        jTextFieldActualizable3.setVisible(true);
        jLabelActualizable1.setText("Salario Base:");
        jLabelActualizable2.setText("Comisión Pieza:");
        jLabelActualizable3.setText("Nº Piezas:");
        clearFields();
    }//GEN-LAST:event_jRadioButtonTrabajadorComisionItemStateChanged

    /**
     * Conjunto de metodos que serán activado al cambiar el valor de cualquiera
     * de los campos de la interfaz
     *
     * @param evt
     */
    private void jTextFieldNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyReleased
        // TODO add your handling code here:
        checkDataFields();
    }//GEN-LAST:event_jTextFieldNombreKeyReleased

    private void jTextFieldApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApellidoKeyReleased
        // TODO add your handling code here:
        checkDataFields();
    }//GEN-LAST:event_jTextFieldApellidoKeyReleased

    private void jTextFieldActualizable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldActualizable1KeyReleased
        // TODO add your handling code here:
        checkDataFields();
    }//GEN-LAST:event_jTextFieldActualizable1KeyReleased

    private void jTextFieldActualizable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldActualizable2KeyReleased
        // TODO add your handling code here:
        checkDataFields();
    }//GEN-LAST:event_jTextFieldActualizable2KeyReleased

    private void jTextFieldActualizable3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldActualizable3KeyReleased
        // TODO add your handling code here:
        checkDataFields();
    }//GEN-LAST:event_jTextFieldActualizable3KeyReleased

    /**
     * Metodo que le da funcionalidad al boton "Borrar Empleado"
     *
     * @param evt
     */
    private void jButtonEliminarTrabajadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarTrabajadorActionPerformed
        // TODO add your handling code here
        modelo.removeElementAt(jListListaEmpleados.getSelectedIndex());
        clearFields();

    }//GEN-LAST:event_jButtonEliminarTrabajadorActionPerformed

    private void jMenuItemJefeProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemJefeProyectoActionPerformed
        // TODO add your handling code here:
        jRadioButtonJefeProyecto.doClick();
    }//GEN-LAST:event_jMenuItemJefeProyectoActionPerformed

    private void jMenuItemTrabajadorHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTrabajadorHorasActionPerformed
        // TODO add your handling code here:
        jRadioButtonTrabajadorHoras.doClick();
    }//GEN-LAST:event_jMenuItemTrabajadorHorasActionPerformed

    private void jMenuItemTrabajadorMontadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTrabajadorMontadorActionPerformed
        // TODO add your handling code here:
        jRadioButtonTrabajadorMontador.doClick();
    }//GEN-LAST:event_jMenuItemTrabajadorMontadorActionPerformed

    private void jMenuItemTrabajadorComisiónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTrabajadorComisiónActionPerformed
        // TODO add your handling code here:
        jRadioButtonTrabajadorComision.doClick();
    }//GEN-LAST:event_jMenuItemTrabajadorComisiónActionPerformed

    private void jListListaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListListaEmpleadosMouseClicked
        // TODO add your handling code here:

        int[] listaEmpleadosSelecionados = jListListaEmpleados.getSelectedIndices();
        if (listaEmpleadosSelecionados.length == 1) {
            //Activar boton Eliminar
            jButtonEliminarTrabajador.setEnabled(true);
            //Estado botones menu
            jMenuItemBorrarTodos.setEnabled(true);
            jMenuItemBorrarSeleccionados.setEnabled(false);
            jMenuItemBorrarSelección.setEnabled(true);
            //Obtener salario y mostrarlo
            aux = (Empleado) modelo.getElementAt(jListListaEmpleados.getSelectedIndex());
            jTextFieldSalario.setText(aux.getSalario() + "€");
            aux = null;
        } else if (listaEmpleadosSelecionados.length > 1) {
            //Estado botones menu
            jMenuItemBorrarTodos.setEnabled(true);
            jMenuItemBorrarSeleccionados.setEnabled(true);
            jMenuItemBorrarSelección.setEnabled(false);
            jButtonEliminarTrabajador.setEnabled(false);
            jLabelSalario.setText(" ");

        }

    }//GEN-LAST:event_jListListaEmpleadosMouseClicked

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jMenuItemBorrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBorrarTodosActionPerformed
        // TODO add your handling code here:
        modelo.removeAllElements();
        clearFields();
    }//GEN-LAST:event_jMenuItemBorrarTodosActionPerformed

    private void jMenuItemBorrarSeleccionadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBorrarSeleccionadosActionPerformed
        // TODO add your handling code here:
        if (jListListaEmpleados.getSelectedIndices().length > 0) {
            int[] selectedIndices = jListListaEmpleados.getSelectedIndices();
            for (int i = selectedIndices.length - 1; i >= 0; i--) {
                modelo.removeElementAt(selectedIndices[i]);
            }
        }
        clearFields();
    }//GEN-LAST:event_jMenuItemBorrarSeleccionadosActionPerformed

    private void jMenuItemBorrarSelecciónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBorrarSelecciónActionPerformed
        // TODO add your handling code here:
        jButtonEliminarTrabajador.doClick();
    }//GEN-LAST:event_jMenuItemBorrarSelecciónActionPerformed

    /**
     * Metodo auxiliar que limpiara todos los campos
     */
    private void clearFields() {
        //Vacio todos los campos
        jTextFieldNombre.setText(null);
        jTextFieldApellido.setText(null);
        jTextFieldActualizable1.setText(null);
        jTextFieldActualizable2.setText(null);
        jTextFieldActualizable3.setText(null);
        //Desactivo los botones de Añadir, borrar datos y borrar Trabajador
        jButtonAñadir.setEnabled(false);
        jButtonBorrarDatos.setEnabled(false);
        jButtonEliminarTrabajador.setEnabled(false);
        //Vacio el campo salario
        jTextFieldSalario.setText(" ");
        //Vacio el objeto aux por si acaso
        aux = null;
        //Reestablezco el menu
        jMenuItemBorrarTodos.setEnabled(false);
        jMenuItemBorrarSeleccionados.setEnabled(false);
        jMenuItemBorrarSelección.setEnabled(false);
        //Borrar Selección JList
        jListListaEmpleados.clearSelection();
    }

    /**
     * Metodo auxiliar que comprobará los campos introducidos
     *
     * @return
     */
    private void checkDataFields() {

        //Comprueba que todos los campos sean correctos
        
        //Nombre
        if (jTextFieldNombre.getText().matches("^[A-Z]?[a-z]{3,}")) {
            campoCorrecto[0] = true;
            jTextFieldNombre.setForeground(Color.BLACK);
            System.out.println("Correcto");
        } else {
            campoCorrecto[0] = false;
            jTextFieldNombre.setForeground(Color.red);
            System.out.println("Incorrecto");
        }

        //Apellido
        if (jTextFieldApellido.getText().matches("^[A-Z]?[a-z]{3,}")) {
            campoCorrecto[1] = true;
            jTextFieldApellido.setForeground(Color.BLACK);

        } else {
            campoCorrecto[1] = false;
            jTextFieldApellido.setForeground(Color.red);
        }
        //Actualizable 1
        if (jTextFieldActualizable1.getText().matches("^(\\d|-)?(\\d|,)+\\.?\\d*$")) {
            campoCorrecto[2] = true;
            jTextFieldActualizable1.setForeground(Color.BLACK);

        } else {
            campoCorrecto[2] = false;
            jTextFieldActualizable1.setForeground(Color.red);
        }

        //Actualizable 2
        if (jTextFieldActualizable2.getText().matches("^(\\d|-)?(\\d|,)+\\.?\\d*$")) {
            campoCorrecto[3] = true;
            jTextFieldActualizable2.setForeground(Color.BLACK);

        } else {
            campoCorrecto[3] = false;
            jTextFieldActualizable2.setForeground(Color.red);
        }

        //Actualizable 3
        if (jTextFieldActualizable3.getText().matches("^(\\d|-)?(\\d|,)+\\.?\\d*$")) {
            campoCorrecto[4] = true;
            jTextFieldActualizable3.setForeground(Color.BLACK);

        } else {
            campoCorrecto[4] = false;
            jTextFieldActualizable3.setForeground(Color.red);
        }

        //-----------------------------------
        
        //Al estar rellenado 1 campo: habilita boton borrarDatos
        if (!"".equals(jTextFieldNombre.getText().toString())
                || !"".equals(jTextFieldApellido.getText().toString())
                || !"".equals(jTextFieldActualizable1.getText().toString())
                || !"".equals(jTextFieldActualizable2.getText().toString())
                || !"".equals(jTextFieldActualizable3.getText().toString())) {
            jButtonBorrarDatos.setEnabled(true);
        }

        //Si el jefe o trabajador a comisión están selecionados: comprobar campos 5 y habilitar boton añadir
        if (jRadioButtonJefeProyecto.isSelected() || jRadioButtonTrabajadorComision.isSelected()) {
            if (campoCorrecto[0]&&campoCorrecto[1]&&campoCorrecto[2]&&campoCorrecto[3]&&campoCorrecto[4]) {
                jButtonAñadir.setEnabled(true);
            } else {
                jButtonAñadir.setEnabled(false);
            }
            //Si el jefe o trabajador a comisión están selecionados: comprobar campos 4 y habilitar boton añadir
        } else if (jRadioButtonTrabajadorHoras.isSelected() || jRadioButtonTrabajadorMontador.isSelected()) {
            if (campoCorrecto[0]&&campoCorrecto[1]&&campoCorrecto[2]&&campoCorrecto[3]) {
                jButtonAñadir.setEnabled(true);
            } else {
                jButtonAñadir.setEnabled(false);
            }
        }

        //Cada vez que se actualice un campo, desactivamos los botones de gestion de empleados
        jTextFieldSalario.setText(" ");
        jButtonEliminarTrabajador.setEnabled(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
 /*
            try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
            javax.swing.UIManager.setLookAndFeel(info.getClassName());
            break;
            }
            }
            } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProGestionEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProGestionEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProGestionEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProGestionEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }*/

            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            //</editor-fold>
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProGestionEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ProGestionEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ProGestionEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ProGestionEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProGestionEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipoTrabajador;
    private javax.swing.JButton jButtonAñadir;
    private javax.swing.JButton jButtonBorrarDatos;
    private javax.swing.JButton jButtonEliminarTrabajador;
    private javax.swing.JLabel jLabelActualizable1;
    private javax.swing.JLabel jLabelActualizable2;
    private javax.swing.JLabel jLabelActualizable3;
    private javax.swing.JLabel jLabelApellido;
    private javax.swing.JLabel jLabelMensaje;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelSalario;
    private javax.swing.JList<String> jListListaEmpleados;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemBorrarSeleccionados;
    private javax.swing.JMenuItem jMenuItemBorrarSelección;
    private javax.swing.JMenuItem jMenuItemBorrarTodos;
    private javax.swing.JMenuItem jMenuItemJefeProyecto;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemTrabajadorComisión;
    private javax.swing.JMenuItem jMenuItemTrabajadorHoras;
    private javax.swing.JMenuItem jMenuItemTrabajadorMontador;
    private javax.swing.JPanel jPanelDatosTrabajador;
    private javax.swing.JPanel jPanelTipoTrabajador;
    private javax.swing.JPanel jPanelTipodeTrabajador;
    private javax.swing.JPanel jPanelTrabajadoresActivos;
    private javax.swing.JRadioButton jRadioButtonJefeProyecto;
    private javax.swing.JRadioButton jRadioButtonTrabajadorComision;
    private javax.swing.JRadioButton jRadioButtonTrabajadorHoras;
    private javax.swing.JRadioButton jRadioButtonTrabajadorMontador;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JPopupMenu.Separator jSeparator;
    private javax.swing.JTextField jTextFieldActualizable1;
    private javax.swing.JTextField jTextFieldActualizable2;
    private javax.swing.JTextField jTextFieldActualizable3;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldSalario;
    // End of variables declaration//GEN-END:variables
}
